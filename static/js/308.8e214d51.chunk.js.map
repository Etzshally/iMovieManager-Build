{"version":3,"file":"static/js/308.8e214d51.chunk.js","mappings":"sNAEA,IAAMA,EAAiB,SAACC,GAAD,MAAY,CACjCC,KAAM,mBACNC,QAASF,IAGLG,EAAe,SAACH,GAAD,MAAY,CAC/BC,KAAM,iBACNC,QAASF,IAGLI,EAAsB,SAACC,GAAD,MAAc,CACxCJ,KAAM,wBACNC,QAASG,IAGLC,EAAoB,SAACD,GAAD,MAAc,CACtCJ,KAAM,sBACNC,QAASG,K,sGCnBX,IAAME,EAAU,mCACVC,EAAW,4CACXC,EAAU,mC,6JCIHC,EAAa,SAAC,GAAe,IAAbV,EAAY,EAAZA,MAC3B,GAA4BW,EAAAA,EAAAA,YAAWC,EAAAA,GAA/BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAGTC,EAAa,SAACf,GAClB,OACEa,EAAMG,UAAUC,MAAK,SAACC,GAAD,OAAeA,EAAUC,KAAOnB,EAAMmB,OAC3DN,EAAMO,QAAQH,MAAK,SAACC,GAAD,OAAeA,EAAUC,KAAOnB,EAAMmB,OAG7D,OACE,iBAAKE,UAAU,cAAf,WACE,gBAAKA,UAAWrB,EAAMsB,YAAc,QAAU,sBAA9C,SACGtB,EAAMsB,cACL,gBACEC,IAAKd,EAAAA,GAAQT,EAAMsB,YACnBE,IAAKxB,EAAMyB,MAAQzB,EAAMyB,MAAQ,QAIvC,iBAAKJ,UAAU,UAAf,WACE,eAAIA,UAAU,QAAd,SAAuBrB,EAAMyB,MAAQzB,EAAMyB,MAAQ,QACnD,kBAAOJ,UAAU,eAAjB,SACGrB,EAAM0B,aAAe1B,EAAM0B,aAAaC,MAAM,EAAG,GAAK,OAEzD,iBAAKN,UAAU,gBAAf,WACE,mBACEO,SAAUb,EAAWf,GACrB6B,QAAS,kBAAMf,GAASf,EAAAA,EAAAA,IAAeC,KACvCqB,UAAU,MAHZ,+BAOA,mBACEO,SAAUb,EAAWf,GACrB6B,QAAS,kBAAMf,GAASX,EAAAA,EAAAA,IAAaH,KACrCqB,UAAU,MAHZ,sC,mBCzBGS,EAAc,SAACC,EAAUC,GAEpC,OAAOC,EAAAA,EAAAA,aAbQ,SAACF,EAAUC,GAExB,IAAIE,EADN,GAAwB,oBAAbH,EAET,OAAO,WAAc,IAAD,uBAATI,EAAS,yBAATA,EAAS,gBAClBC,aAAaF,GACbA,EAAOG,YAAW,WAChBN,EAAQ,WAAR,EAAYI,KACXH,IAMYM,CAASP,EAAUC,GAAQ,KCsChD,EA/Ce,WACb,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAW,mCAAG,WAAOC,EAAKC,GAAZ,gGAEOC,IAAAA,IAAUF,EAAK,CAAEC,OAAAA,IAFxB,OAEVE,EAFU,OAGhBP,EAAUO,EAASC,KAAKC,SAHR,gDAKhBC,QAAQC,IAAR,MALgB,yDAAH,wDAUXC,EAAiBvB,EAAYc,EAAa,KAE1CE,EAAS,CACbQ,QAAS/C,EAAAA,GACTgD,cAAe,QACfC,SAAU,QACVd,MAAOA,GAST,OANAe,EAAAA,EAAAA,YAAU,WACJf,GACFW,EAAe7C,EAAAA,GAAUsC,KAE1B,CAACJ,KAGF,kBAAMrB,UAAU,gBAAhB,WACE,kBACEqC,SAAU,SAACC,GAAD,OAAOhB,EAASgB,EAAEC,OAAOC,QACnC5D,KAAK,OACLoB,UAAU,SACVyC,YAAY,mBACZC,WAAS,EACTF,MAAOnB,KAET,gBAAKrB,UAAU,mBAAf,SACGmB,GACCA,EAAOwB,KAAI,SAAChE,GAAD,OAAW,SAAC,EAAD,CAAYA,MAAOA,GAAYA,EAAMmB","sources":["Actions/MovieActions.js","Constants/Constants.js","components/SearchCard/SearchCard.js","Hooks/useDebounce.js","components/Search/Search.js"],"sourcesContent":["//action creators for MovieReducer\n\nconst addToWatchList = (movie) => ({\n  type: \"ADD_TO_WATCHLIST\",\n  payload: movie,\n});\n\nconst addToWatched = (movie) => ({\n  type: \"ADD_TO_WATCHED\",\n  payload: movie,\n});\n\nconst removeFromWatchList = (movieId) => ({\n  type: \"REMOVE_FROM_WATCHLIST\",\n  payload: movieId,\n});\n\nconst removeFromWatched = (movieId) => ({\n  type: \"REMOVE_FROM_WATCHED\",\n  payload: movieId,\n});\nexport { addToWatchList, addToWatched, removeFromWatchList, removeFromWatched };\n","const API_KEY = \"a06430d8522adb1e2a6e3b2ed2779fd8\";\nconst BASE_URL = \"https://api.themoviedb.org/3/search/movie\";\nconst IMG_URL = \"https://image.tmdb.org/t/p/w300\";\n\nexport { API_KEY, BASE_URL, IMG_URL };\n","import React, { useContext } from \"react\";\nimport \"./SearchCard.css\";\nimport { MovieContext } from \"../../Contexts/MovieContext\";\nimport { addToWatchList, addToWatched } from \"../../Actions/MovieActions\";\nimport {IMG_URL} from '../../Constants/Constants';\n\nexport const SearchCard = ({ movie }) => {\n  const { state, dispatch } = useContext(MovieContext);\n\n  //function to check whether movie already exists in the list\n  const checkMovie = (movie) => {\n    return (\n      state.watchList.find((listMovie) => listMovie.id === movie.id) ||\n      state.watched.find((listMovie) => listMovie.id === movie.id)\n    );\n  };\n  return (\n    <div className=\"search-card\">\n      <div className={movie.poster_path ? \"cover\" : \"cover cover-default\"}>\n        {movie.poster_path && (\n          <img\n            src={IMG_URL+movie.poster_path}\n            alt={movie.title ? movie.title : \"\"}\n          />\n        )}\n      </div>\n      <div className=\"details\">\n        <h3 className=\"title\">{movie.title ? movie.title : \"--\"}</h3>\n        <small className=\"release-year\">\n          {movie.release_date ? movie.release_date.slice(0, 4) : \"-\"}\n        </small>\n        <div className=\"btn-container\">\n          <button\n            disabled={checkMovie(movie)}\n            onClick={() => dispatch(addToWatchList(movie))}\n            className=\"btn\"\n          >\n            Add To Watchlist\n          </button>\n          <button\n            disabled={checkMovie(movie)}\n            onClick={() => dispatch(addToWatched(movie))}\n            className=\"btn\"\n          >\n            Add To Watched\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","//custom hook to debounce a function\nimport { useCallback } from \"react\";\n\nconst debounce = (callback, delay) => {\n  if (typeof callback === \"function\") {\n    let flag;\n    return (...args) => {\n      clearTimeout(flag);\n      flag = setTimeout(() => {\n        callback(...args);\n      }, delay);\n    };\n  }\n};\nexport const useDebounce = (callback, delay) => {\n  //memoizing the debounced function to maintain same reference across renders\n  return useCallback(debounce(callback, delay), []);\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./Search.css\";\nimport { SearchCard } from \"../SearchCard/SearchCard\";\nimport axios from \"axios\";\nimport { useDebounce } from \"../../Hooks/useDebounce\";\nimport { API_KEY, BASE_URL } from \"../../Constants/Constants\";\n\nconst Search = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  const fetchMovies = async (url, params) => {\n    try {\n      const response = await axios.get(url, { params });\n      setMovies(response.data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //debouncing API call\n  const debouncedFetch = useDebounce(fetchMovies, 300);\n\n  const params = {\n    api_key: API_KEY,\n    include_adult: \"false\",\n    language: \"en_US\",\n    query: query,\n  };\n\n  useEffect(() => {\n    if (query) {\n      debouncedFetch(BASE_URL, params);\n    }\n  }, [query]);\n\n  return (\n    <main className=\"add-container\">\n      <input\n        onChange={(e) => setQuery(e.target.value)}\n        type=\"text\"\n        className=\"search\"\n        placeholder=\"Search Movies...\"\n        autoFocus\n        value={query}\n      />\n      <div className=\"search-container\">\n        {movies &&\n          movies.map((movie) => <SearchCard movie={movie} key={movie.id} />)}\n      </div>\n    </main>\n  );\n};\n\nexport default Search;\n"],"names":["addToWatchList","movie","type","payload","addToWatched","removeFromWatchList","movieId","removeFromWatched","API_KEY","BASE_URL","IMG_URL","SearchCard","useContext","MovieContext","state","dispatch","checkMovie","watchList","find","listMovie","id","watched","className","poster_path","src","alt","title","release_date","slice","disabled","onClick","useDebounce","callback","delay","useCallback","flag","args","clearTimeout","setTimeout","debounce","useState","movies","setMovies","query","setQuery","fetchMovies","url","params","axios","response","data","results","console","log","debouncedFetch","api_key","include_adult","language","useEffect","onChange","e","target","value","placeholder","autoFocus","map"],"sourceRoot":""}